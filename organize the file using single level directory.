#include <stdio.h>
#include <string.h>

struct {
    char fname[20];   // file name
} dir[10];            // max 10 files

int main() {
    int n = 0, choice;
    char f[20];

    while (1) {
        printf("\n--- Single Level Directory ---\n");
        printf("1. Create File\n2. Delete File\n3. Search File\n4. Display Files\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            if (n >= 10) {
                printf("Directory Full! Cannot create more files.\n");
            } else {
                printf("Enter file name: ");
                scanf("%s", dir[n].fname);
                n++;
                printf("File created successfully.\n");
            }
            break;

        case 2:
            printf("Enter file name to delete: ");
            scanf("%s", f);
            int found = 0;
            for (int i = 0; i < n; i++) {
                if (strcmp(dir[i].fname, f) == 0) {
                    printf("File %s deleted.\n", f);
                    strcpy(dir[i].fname, dir[n-1].fname); // Replace with last file
                    n--;
                    found = 1;
                    break;
                }
            }
            if (!found) printf("File not found!\n");
            break;

        case 3:
            printf("Enter file name to search: ");
            scanf("%s", f);
            found = 0;
            for (int i = 0; i < n; i++) {
                if (strcmp(dir[i].fname, f) == 0) {
                    printf("File %s found at position %d.\n", f, i+1);
                    found = 1;
                    break;
                }
            }
            if (!found) printf("File not found!\n");
            break;

        case 4:
            if (n == 0) {
                printf("Directory is empty.\n");
            } else {
                printf("Files in directory:\n");
                for (int i = 0; i < n; i++) {
                    printf("%s\n", dir[i].fname);
                }
            }
            break;

        case 5:
            printf("Exiting...\n");
            return 0;

        default:
            printf("Invalid choice!\n");
        }
    }
}
